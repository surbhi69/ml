import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split as tts
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB

df = pd.read_csv('/content/spam - spam.csv')
df['spam'] = df['v1'].apply(lambda x: 1 if x == 'spam' else 0)

new_df = df[['v1', 'v2', 'spam']]


from sklearn.model_selection import train_test_split as tts
x_train,x_test,y_train,y_test=tts(df.v2,df.spam)
from sklearn.feature_extraction.text import CountVectorizer
v=CountVectorizer()
x_train_count=v.fit_transform(x_train.values)
x_train_count.toarray()[:2]


from sklearn.naive_bayes import MultinomialNB
model = MultinomialNB()
model.fit(x_train_count, y_train)

from sklearn.naive_bayes import BernoulliNB
model1=BernoulliNB()
model1.fit(x_train_count,y_train)

from sklearn.naive_bayes import GaussianNB
model2=GaussianNB()
model2.fit(x_train_count.toarray(),y_train)


emails = ["How are you brother?", "Free entry"]
email_count = v.transform(emails)
model.predict(email_count)

x_test_count = v.transform(x_test)
model.score(x_test_count, y_test)


emails=["Happy BIrthday Bhai, Party kbb Dega ?"]
email_count=v.transform(emails)
model1.predict(email_count)

x_test_count=v.transform(x_test)
model1.score(x_test_count,y_test)


emails=["Happy BIrthday Bhai, Party kbb Dega ?"]
email_count=v.transform(emails)
model2.predict(email_count.toarray())

x_test_count=v.transform(x_test).toarray()
model2.score(x_test_count,y_test)

